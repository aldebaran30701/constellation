# action.yml 
name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      RUNNER_IMAGE: "constellationapplication/netbeans-runner:12"
      TRAVIS_REPO_SLUG: "${{ github.repository }}"
      DESTINATION_BRANCH: "${{ github.base_ref }}"
      PULL_REQUEST_NUMBER: "${{ github.event.number }}"
      SOURCE_BRANCH: "${{ github.head_ref }}"
      SONARCLOUD_URL: sonarcloud.io

    steps:
    - name: Save Variables
      id: extract_variables
      run: |
        echo "##[set-output name=prsourcelocation;]$(echo ${GITHUB_REPOSITORY})"
        echo "##[set-output name=destinationbranch;]$(echo ${DESTINATION_BRANCH})"
        echo "##[set-output name=prnumber;]$(echo ${PULL_REQUEST_NUMBER})"
        echo "##[set-output name=sourcebranch;]$(echo ${SOURCE_BRANCH})"

      # Checkout this commit
    - name: Checkout Branch
      uses: actions/checkout@v1

      # Before caching, print and delete all cached ivy properties
    - name: Remove Ivy Properties
      if: steps.cache-dependencies.outputs.cache-hit == 'true'
      run: find "${HOME}"/.ivy2/cache -name "ivydata-*.properties" -print -delete

      # Cache the ivy dependencies to the home directory.
    - name: Initialise Cache
      id: cache-dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-dependencies
      with:
        path: ${HOME}/.ivy2/cache
        key: ${{ runner.os }}-dependencies-${{ env.cache-name }}-${{ hashFiles('CoreDependencies/src/ivy.xml') }}
        restore-keys: |
          ${{ runner.os }}-dependencies-${{ env.cache-name }}-
          ${{ runner.os }}-dependencies-
          ${{ runner.os }}-
          
      # Update the project dependencies and run tests
    #- name: Run Tests
    #  run: |
    #    mkdir -p ${HOME}/.ivy2/cache
    #    chmod +x /home/runner/work/constellation/constellation/buildutilities/run-tests.sh
    #    chmod +x /home/runner/work/constellation/constellation/buildutilities/sonar.sh
    #    chmod +x /home/runner/work/constellation/constellation/buildutilities/functions.sh
    #    docker pull "${RUNNER_IMAGE}"
    #    docker run --mount "type=bind,source=/home/runner/work/constellation/constellation/,target=/home/runner/work/constellation/constellation/" --mount "type=bind,source=${HOME}/.ivy2/cache,target=/root/.ivy2/cache" --workdir /home/runner/work/constellation/constellation/ "${RUNNER_IMAGE}" buildutilities/run-tests.sh

        # Run Sonar Checks55
    - name: run sonar2
      run: |
        docker run --mount "type=bind,source=/home/runner/work/constellation/constellation/,target=/home/runner/work/constellation/constellation/" \
        --rm \
        -e SONAR_HOST_URL="http://${SONARCLOUD_URL}" \
        -e SONAR_LOGIN=${SONAR_TOKEN} \
        -e SONAR_PROJECTKEY=aldebaran30701_constellation \
        -e SONAR_ORGANIZATION=aldebaran30701 \
        -v "aldebaran30701:/usr/src" \
        echo $pwd
        sonarsource/sonar-scanner-cli
        
    - name: Run Sonar
      run: |
        mkdir -p ${HOME}/.ivy2/cache
        chmod +x /home/runner/work/constellation/constellation/buildutilities/run-tests.sh
        chmod +x /home/runner/work/constellation/constellation/buildutilities/sonar.sh
        chmod +x /home/runner/work/constellation/constellation/buildutilities/functions.sh
        docker pull "${RUNNER_IMAGE}"
        docker run --mount "type=bind,source=/home/runner/work/constellation/constellation/,target=/home/runner/work/constellation/constellation/" --mount "type=bind,source=${HOME}/.ivy2/cache,target=/root/.ivy2/cache" --workdir /home/runner/work/constellation/constellation/ "${RUNNER_IMAGE}" buildutilities/sonar.sh "${{steps.extract_variables.outputs.prsourcelocation}}" "${{steps.extract_variables.outputs.prnumber}}" "${{steps.extract_variables.outputs.destinationbranch}}" "${{steps.extract_variables.outputs.sourcebranch}}"
        
    #- name: SonarCloud Scan
    #  uses: SonarSource/sonarcloud-github-action@master